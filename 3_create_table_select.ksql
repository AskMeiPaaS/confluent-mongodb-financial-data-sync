-- this flag tells Kafka where to start reading offsets.
set 'auto.offset.reset'='earliest';

-- define account stream
create stream fin_account WITH (kafka_topic='mongodb.kafka.fin_account', value_format='avro');

-- capture account change data in stream
create stream fin_account_mongodb AS 
        SELECT 
            after -> account_id AS account_id,
            after -> district_id AS district_id,
            after -> create_date as create_date,
            after -> frequency as frequency
        FROM fin_account;

-- define disp stream
create stream fin_disp WITH (kafka_topic='mongodb.kafka.fin_disp', value_format='avro');

-- capture disp change data in stream
create stream fin_disp_mongodb AS 
        SELECT 
            after -> disp_id AS disp_id,
            after -> client_id AS client_id,
            after -> account_id as account_id,
            after -> disp_type as disp_type
        FROM fin_disp;

-- define loan stream
create stream fin_loan WITH (kafka_topic='mongodb.kafka.fin_loan', value_format='avro');

-- capture loan change data in stream
create stream fin_loan_mongodb AS 
        SELECT 
            after -> loan_id AS loan_id,
            after -> account_id AS account_id,
            after -> granted_date as granted_date,
            after -> amount as amount,
            after -> duration AS duration,
            after -> payments as payments,
            after -> status as status
        from fin_loan;

-- define order stream
create stream fin_order WITH (kafka_topic='mongodb.kafka.fin_order', value_format='avro');

-- capture loan change data in stream
create stream fin_order_mongodb AS 
        SELECT 
            after -> order_id AS order_id,
            after -> account_id AS account_id,
            after -> bank_to as bank_to,
            after -> account_to as account_to,
            after -> amount AS amount,
            after -> category as category
        from fin_order;

-- define trans stream
create stream fin_trans WITH (kafka_topic='mongodb.kafka.fin_trans', value_format='avro');

-- capture trans change data in stream
create stream fin_trans_mongodb AS 
        SELECT 
            after -> trans_id AS trans_id,
            after -> account_id AS account_id,
            after -> trans_date as trans_date,
            after -> amount as amount,
            after -> balance AS balance,
            after -> trans_type as trans_type,
            after -> operation as operation,
            after -> category as category,
            after -> other_bank_id AS other_bank_id,
            after -> other_account_id as other_account_id
        from fin_trans;

-- create a join streams with trans object
CREATE STREAM fin_account_trans_mongodb AS
    SELECT a.account_id key,
            AS_VALUE(a.account_id) as account_id,
            a.district_id as district_id,
            DATETOSTRING(a.create_date, 'yyyy-MM-dd') as create_date,
            t.trans_id as trans_id,
           DATETOSTRING(t.trans_date, 'yyyy-MM-dd') as trans_date,
            STRUCT(id := t.trans_id, ts := TIMESTAMPTOSTRING(t.rowtime, 'yyyy-MM-dd HH:mm:ss', 'UTC'), category := t.category, amount := t.amount, balance := t.balance, trans_type := t.trans_type, operation :=t.operation, other_bank_id := t.other_bank_id, other_account_id := t.other_account_id) AS trans
    FROM fin_account_mongodb a INNER JOIN fin_trans_mongodb t
    WITHIN 7 DAYS
    ON a.account_id = t.account_id;
